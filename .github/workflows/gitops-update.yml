name: GitOps Update and Deploy

on:
  push:
    branches: [ main, develop ]
  workflow_dispatch:

env:
  REGISTRY: docker.io
  BACKEND_IMAGE: bakiakgun/task-tracker-backend
  FRONTEND_IMAGE: bakiakgun/task-tracker-frontend

jobs:
  build-and-update:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Get commit hash
      id: commit
      run: echo "SHORT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push backend
      uses: docker/build-push-action@v5
      with:
        context: ./task-tracker-backend
        push: true
        tags: ${{ env.BACKEND_IMAGE }}:${{ steps.commit.outputs.SHORT_SHA }},${{ env.BACKEND_IMAGE }}:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Build and push frontend
      uses: docker/build-push-action@v5
      with:
        context: ./task-tracker-frontend
        push: true
        tags: ${{ env.FRONTEND_IMAGE }}:${{ steps.commit.outputs.SHORT_SHA }},${{ env.FRONTEND_IMAGE }}:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Update values.yaml with new tags
      run: |
        # Backend tag güncelle
        sed -i "s/tag: \".*\"/tag: \"${{ steps.commit.outputs.SHORT_SHA }}\"/g" helm-chart/values.yaml
        
        # Frontend tag güncelle
        sed -i "s/tag: \".*\"/tag: \"${{ steps.commit.outputs.SHORT_SHA }}\"/g" helm-chart/values.yaml
        
        echo "Updated image tags to ${{ steps.commit.outputs.SHORT_SHA }}"

    - name: Commit and push changes
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add helm-chart/values.yaml
        git commit -m "Update image tags to ${{ steps.commit.outputs.SHORT_SHA }} [skip ci]"
        git push

    - name: Notify ArgoCD
      run: |
        echo "GitOps update completed. ArgoCD will automatically sync the changes."
        echo "Commit SHA: ${{ steps.commit.outputs.SHORT_SHA }}"
        echo "Backend Image: ${{ env.BACKEND_IMAGE }}:${{ steps.commit.outputs.SHORT_SHA }}"
        echo "Frontend Image: ${{ env.FRONTEND_IMAGE }}:${{ steps.commit.outputs.SHORT_SHA }}"

  # ArgoCD Sync Job (opsiyonel - manuel trigger için)
  argocd-sync:
    runs-on: ubuntu-latest
    needs: build-and-update
    if: github.event_name == 'workflow_dispatch'
    steps:
    - name: Install ArgoCD CLI
      run: |
        curl -sSL -o argocd-linux-amd64 https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
        chmod +x argocd-linux-amd64
        sudo mv argocd-linux-amd64 /usr/local/bin/argocd

    - name: Sync Development Application
      run: |
        argocd login ${{ secrets.ARGOCD_SERVER }} --username admin --password ${{ secrets.ARGOCD_PASSWORD }} --insecure
        argocd app sync task-tracker-dev --prune --force

    - name: Sync Production Application
      run: |
        argocd login ${{ secrets.ARGOCD_SERVER }} --username admin --password ${{ secrets.ARGOCD_PASSWORD }} --insecure
        argocd app sync task-tracker-prod --prune --force
