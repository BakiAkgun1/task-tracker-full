name: GitOps - Build, Push & Update Values

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  BACKEND_IMAGE: bakiakgun/task-tracker-backend
  FRONTEND_IMAGE: bakiakgun/task-tracker-frontend

jobs:
  build-and-update:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Get commit hash
      id: commit
      run: echo "SHORT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push backend
      uses: docker/build-push-action@v5
      with:
        context: ./task-tracker-backend
        push: true
        tags: ${{ env.BACKEND_IMAGE }}:${{ steps.commit.outputs.SHORT_SHA }},${{ env.BACKEND_IMAGE }}:latest

    - name: Build and push frontend
      uses: docker/build-push-action@v5
      with:
        context: ./task-tracker-frontend
        push: true
        tags: ${{ env.FRONTEND_IMAGE }}:${{ steps.commit.outputs.SHORT_SHA }},${{ env.FRONTEND_IMAGE }}:latest

    - name: Update values.yaml with new image tags
      run: |
        # Backend tag gÃ¼ncelle
        sed -i "s/tag: \".*\"/tag: \"${{ steps.commit.outputs.SHORT_SHA }}\"/g" helm-chart/values.yaml
        
        # Frontend tag gÃ¼ncelle
        sed -i "s/tag: \".*\"/tag: \"${{ steps.commit.outputs.SHORT_SHA }}\"/g" helm-chart/values.yaml
        
        echo "Updated image tags to ${{ steps.commit.outputs.SHORT_SHA }}"

    - name: Commit and push changes
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add helm-chart/values.yaml
        git commit -m "Update image tags to ${{ steps.commit.outputs.SHORT_SHA }} [skip ci]" || echo "No changes to commit"
        git push origin main || echo "Push failed, but images are built"

    - name: Create deployment summary
      run: |
        echo "## ðŸŽ‰ GitOps Deployment Completed" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### ðŸ“¦ Images Built & Pushed:" >> $GITHUB_STEP_SUMMARY
        echo "- **Backend**: \`${{ env.BACKEND_IMAGE }}:${{ steps.commit.outputs.SHORT_SHA }}\`" >> $GITHUB_STEP_SUMMARY
        echo "- **Frontend**: \`${{ env.FRONTEND_IMAGE }}:${{ steps.commit.outputs.SHORT_SHA }}\`" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### ðŸ”„ GitOps Flow:" >> $GITHUB_STEP_SUMMARY
        echo "1. âœ… Docker images built and pushed" >> $GITHUB_STEP_SUMMARY
        echo "2. âœ… values.yaml updated with new tags" >> $GITHUB_STEP_SUMMARY
        echo "3. âœ… Changes committed to Git" >> $GITHUB_STEP_SUMMARY
        echo "4. ðŸ”„ ArgoCD will automatically sync" >> $GITHUB_STEP_SUMMARY
        echo "5. ðŸš€ Application deployed to Kubernetes" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### ðŸ“Š Commit Info:" >> $GITHUB_STEP_SUMMARY
        echo "- **Commit Hash**: ${{ steps.commit.outputs.SHORT_SHA }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Branch**: ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Triggered by**: ${{ github.actor }}" >> $GITHUB_STEP_SUMMARY

    - name: Notify completion
      run: |
        echo "âœ… GitOps workflow completed successfully!"
        echo "ðŸ“¦ Backend Image: ${{ env.BACKEND_IMAGE }}:${{ steps.commit.outputs.SHORT_SHA }}"
        echo "ðŸ“¦ Frontend Image: ${{ env.FRONTEND_IMAGE }}:${{ steps.commit.outputs.SHORT_SHA }}"
        echo ""
        echo "ðŸ”„ ArgoCD will automatically sync the changes"
        echo "ðŸš€ Check ArgoCD UI for deployment status"
